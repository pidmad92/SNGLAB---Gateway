
package pe.gob.trabajo.service.wsstd;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "serviciosstd", targetNamespace = "http://ws.web.bs.std.mef.gob.pe/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Serviciosstd {


    /**
     * 
     * @param iduser
     * @return
     *     returns java.lang.String
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public String userName(
        @WebParam(name = "iduser", partName = "iduser")
        long iduser)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param nombreRemitente
     * @param casaComercializadora
     * @param distrito
     * @param idProcedimiento
     * @param tipoPersona
     * @param numeroDocIde
     * @param tipoDocIde
     * @param numeroVoucher
     * @param tipoExpediente
     * @param provincia
     * @param domicilio
     * @param adjunto
     * @param asunto
     * @param fechaDeposito
     * @param departamento
     * @param montoAbonado
     * @param idAreaDeriv
     * @param numeroFolios
     * @return
     *     returns pe.gob.trabajo.service.wsstd.StringArray
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public StringArray crearExpediente(
        @WebParam(name = "tipoExpediente", partName = "tipoExpediente")
        String tipoExpediente,
        @WebParam(name = "idProcedimiento", partName = "idProcedimiento")
        long idProcedimiento,
        @WebParam(name = "fechaDeposito", partName = "fechaDeposito")
        XMLGregorianCalendar fechaDeposito,
        @WebParam(name = "numeroVoucher", partName = "numeroVoucher")
        String numeroVoucher,
        @WebParam(name = "montoAbonado", partName = "montoAbonado")
        float montoAbonado,
        @WebParam(name = "tipoPersona", partName = "tipoPersona")
        String tipoPersona,
        @WebParam(name = "tipoDocIde", partName = "tipoDocIde")
        String tipoDocIde,
        @WebParam(name = "numeroDocIde", partName = "numeroDocIde")
        String numeroDocIde,
        @WebParam(name = "nombreRemitente", partName = "nombreRemitente")
        String nombreRemitente,
        @WebParam(name = "domicilio", partName = "domicilio")
        String domicilio,
        @WebParam(name = "departamento", partName = "departamento")
        String departamento,
        @WebParam(name = "provincia", partName = "provincia")
        String provincia,
        @WebParam(name = "distrito", partName = "distrito")
        String distrito,
        @WebParam(name = "asunto", partName = "asunto")
        String asunto,
        @WebParam(name = "numeroFolios", partName = "numeroFolios")
        long numeroFolios,
        @WebParam(name = "idAreaDeriv", partName = "idAreaDeriv")
        long idAreaDeriv,
        @WebParam(name = "casaComercializadora", partName = "casaComercializadora")
        CasaComercializadora casaComercializadora,
        @WebParam(name = "adjunto", partName = "adjunto")
        byte[] adjunto)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param descripcion
     * @param distrito
     * @param direccion
     * @param subtema
     * @param provincia
     * @param nombre
     * @param numeroSolicitud
     * @param tipoDocumento
     * @param razonSocial
     * @param tema
     * @param codigoUsuario
     * @param correo
     * @param departamento
     * @param numeroDocumento
     * @param medioEntrega
     * @param telefono
     * @param observacion
     * @param remoteAddress
     * @return
     *     returns java.lang.String
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public String crearLAIP(
        @WebParam(name = "codigoUsuario", partName = "codigoUsuario")
        String codigoUsuario,
        @WebParam(name = "numeroSolicitud", partName = "numeroSolicitud")
        String numeroSolicitud,
        @WebParam(name = "nombre", partName = "nombre")
        String nombre,
        @WebParam(name = "razonSocial", partName = "razonSocial")
        String razonSocial,
        @WebParam(name = "tipoDocumento", partName = "tipoDocumento")
        String tipoDocumento,
        @WebParam(name = "numeroDocumento", partName = "numeroDocumento")
        String numeroDocumento,
        @WebParam(name = "direccion", partName = "direccion")
        String direccion,
        @WebParam(name = "departamento", partName = "departamento")
        String departamento,
        @WebParam(name = "provincia", partName = "provincia")
        String provincia,
        @WebParam(name = "distrito", partName = "distrito")
        String distrito,
        @WebParam(name = "correo", partName = "correo")
        String correo,
        @WebParam(name = "telefono", partName = "telefono")
        String telefono,
        @WebParam(name = "tema", partName = "tema")
        String tema,
        @WebParam(name = "subtema", partName = "subtema")
        String subtema,
        @WebParam(name = "descripcion", partName = "descripcion")
        String descripcion,
        @WebParam(name = "medioEntrega", partName = "medioEntrega")
        String medioEntrega,
        @WebParam(name = "observacion", partName = "observacion")
        String observacion,
        @WebParam(name = "remoteAddress", partName = "remoteAddress")
        String remoteAddress)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param descripcion
     * @param distrito
     * @param direccion
     * @param provincia
     * @param nombre
     * @param numeroSolicitud
     * @param tipoDocumento
     * @param razonSocial
     * @param codigoUsuario
     * @param apellido
     * @param correo
     * @param departamento
     * @param numeroDocumento
     * @param medioEntrega
     * @param telefono
     * @param remoteAddress
     * @return
     *     returns java.lang.String
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public String crearQuejas(
        @WebParam(name = "codigoUsuario", partName = "codigoUsuario")
        String codigoUsuario,
        @WebParam(name = "numeroSolicitud", partName = "numeroSolicitud")
        String numeroSolicitud,
        @WebParam(name = "apellido", partName = "apellido")
        String apellido,
        @WebParam(name = "nombre", partName = "nombre")
        String nombre,
        @WebParam(name = "razonSocial", partName = "razonSocial")
        String razonSocial,
        @WebParam(name = "tipoDocumento", partName = "tipoDocumento")
        String tipoDocumento,
        @WebParam(name = "numeroDocumento", partName = "numeroDocumento")
        String numeroDocumento,
        @WebParam(name = "direccion", partName = "direccion")
        String direccion,
        @WebParam(name = "departamento", partName = "departamento")
        String departamento,
        @WebParam(name = "provincia", partName = "provincia")
        String provincia,
        @WebParam(name = "distrito", partName = "distrito")
        String distrito,
        @WebParam(name = "correo", partName = "correo")
        String correo,
        @WebParam(name = "telefono", partName = "telefono")
        String telefono,
        @WebParam(name = "descripcion", partName = "descripcion")
        String descripcion,
        @WebParam(name = "medioEntrega", partName = "medioEntrega")
        String medioEntrega,
        @WebParam(name = "remoteAddress", partName = "remoteAddress")
        String remoteAddress)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param descripcion
     * @param distrito
     * @param direccion
     * @param provincia
     * @param nombre
     * @param numeroSolicitud
     * @param tipoDocumento
     * @param razonSocial
     * @param codigoUsuario
     * @param apellido
     * @param correo
     * @param departamento
     * @param numeroDocumento
     * @param medioEntrega
     * @param telefono
     * @param remoteAddress
     * @return
     *     returns java.lang.String
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public String crearReclamos(
        @WebParam(name = "codigoUsuario", partName = "codigoUsuario")
        String codigoUsuario,
        @WebParam(name = "numeroSolicitud", partName = "numeroSolicitud")
        String numeroSolicitud,
        @WebParam(name = "apellido", partName = "apellido")
        String apellido,
        @WebParam(name = "nombre", partName = "nombre")
        String nombre,
        @WebParam(name = "razonSocial", partName = "razonSocial")
        String razonSocial,
        @WebParam(name = "tipoDocumento", partName = "tipoDocumento")
        String tipoDocumento,
        @WebParam(name = "numeroDocumento", partName = "numeroDocumento")
        String numeroDocumento,
        @WebParam(name = "direccion", partName = "direccion")
        String direccion,
        @WebParam(name = "departamento", partName = "departamento")
        String departamento,
        @WebParam(name = "provincia", partName = "provincia")
        String provincia,
        @WebParam(name = "distrito", partName = "distrito")
        String distrito,
        @WebParam(name = "correo", partName = "correo")
        String correo,
        @WebParam(name = "telefono", partName = "telefono")
        String telefono,
        @WebParam(name = "descripcion", partName = "descripcion")
        String descripcion,
        @WebParam(name = "medioEntrega", partName = "medioEntrega")
        String medioEntrega,
        @WebParam(name = "remoteAddress", partName = "remoteAddress")
        String remoteAddress)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param vucdProducto
     * @param vucdFactura
     * @param vucdZip
     * @param vucmSolicitud
     * @param vucmSolicitudPersona
     * @return
     *     returns pe.gob.trabajo.service.wsstd.VucSTDExpediente
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public VucSTDExpediente crearVuce(
        @WebParam(name = "vucmSolicitud", partName = "vucmSolicitud")
        VucmSolicitud vucmSolicitud,
        @WebParam(name = "vucmSolicitudPersona", partName = "vucmSolicitudPersona")
        VucmSolicitudPersona vucmSolicitudPersona,
        @WebParam(name = "vucdProducto", partName = "vucdProducto")
        VucdProducto vucdProducto,
        @WebParam(name = "vucdFactura", partName = "vucdFactura")
        VucdFacturaArray vucdFactura,
        @WebParam(name = "vucdZip", partName = "vucdZip")
        byte[] vucdZip)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param cda
     * @param fecha
     * @param monto
     * @param nroExpediente
     * @param nroSuce
     * @return
     *     returns boolean
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public boolean pagoVuce(
        @WebParam(name = "nroExpediente", partName = "nroExpediente")
        String nroExpediente,
        @WebParam(name = "nroSuce", partName = "nroSuce")
        String nroSuce,
        @WebParam(name = "CDA", partName = "CDA")
        String cda,
        @WebParam(name = "monto", partName = "monto")
        float monto,
        @WebParam(name = "fecha", partName = "fecha")
        XMLGregorianCalendar fecha)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param nroExpediente
     * @return
     *     returns pe.gob.trabajo.service.wsstd.VucdTablonArray
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public VucdTablonArray obtenerNotificaciones(
        @WebParam(name = "nroExpediente", partName = "nroExpediente")
        String nroExpediente)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param idArchivo
     * @param idflujo
     * @param iddoc
     * @param ene
     * @return
     *     returns boolean
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public boolean confirmarNotificacion(
        @WebParam(name = "iddoc", partName = "iddoc")
        long iddoc,
        @WebParam(name = "idflujo", partName = "idflujo")
        long idflujo,
        @WebParam(name = "idArchivo", partName = "idArchivo")
        long idArchivo,
        @WebParam(name = "ene", partName = "ene")
        int ene)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param nroExpediente
     * @param numero
     * @return
     *     returns boolean
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public boolean resolutivoVuce(
        @WebParam(name = "nroExpediente", partName = "nroExpediente")
        String nroExpediente,
        @WebParam(name = "numero", partName = "numero")
        String numero)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param nroExpediente
     * @return
     *     returns boolean
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public boolean desistirOrden(
        @WebParam(name = "nroExpediente", partName = "nroExpediente")
        String nroExpediente)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param idunidadorganica
     * @param fechainicial
     * @param fechafinal
     * @return
     *     returns pe.gob.trabajo.service.wsstd.HojaDeRutaEllipseArray
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public HojaDeRutaEllipseArray obtenerListado(
        @WebParam(name = "idunidadorganica", partName = "idunidadorganica")
        long idunidadorganica,
        @WebParam(name = "fechainicial", partName = "fechainicial")
        XMLGregorianCalendar fechainicial,
        @WebParam(name = "fechafinal", partName = "fechafinal")
        XMLGregorianCalendar fechafinal)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param nroExpediente
     * @return
     *     returns pe.gob.trabajo.service.wsstd.HojaDeRutaEllipse
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public HojaDeRutaEllipse expedienteEllipse(
        @WebParam(name = "nroExpediente", partName = "nroExpediente")
        String nroExpediente)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param idProcedimiento
     * @param idArea
     * @param pendiente
     * @param fechainicial
     * @param fechafinal
     * @return
     *     returns pe.gob.trabajo.service.wsstd.ExpedienteWSDtoArray
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "expediente", partName = "expediente")
    public ExpedienteWSDtoArray obtenerExpedientesXFiltro(
        @WebParam(name = "idProcedimiento", partName = "idProcedimiento")
        long idProcedimiento,
        @WebParam(name = "idArea", partName = "idArea")
        long idArea,
        @WebParam(name = "pendiente", partName = "pendiente")
        boolean pendiente,
        @WebParam(name = "fechainicial", partName = "fechainicial")
        XMLGregorianCalendar fechainicial,
        @WebParam(name = "fechafinal", partName = "fechafinal")
        XMLGregorianCalendar fechafinal)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param descripcion
     * @param otraEntidadNoExpediente
     * @param lote
     * @param denuncianteNombre
     * @param denunciadoNombre
     * @param snumero
     * @param sdireccion
     * @param provincia
     * @param nombre
     * @param interior
     * @param via
     * @param numeroSolicitud
     * @param denunciadoDomicilio
     * @param razonSocial
     * @param denuncianteTelefono
     * @param circunstancias
     * @param otraEntidadNombre
     * @param denunciadoPuesto
     * @param correo
     * @param numeroDocumento
     * @param denunciadoLTrabajo
     * @param telefono
     * @param remoteAddress
     * @param manzana
     * @param pruebas
     * @param piso
     * @param distrito
     * @param quienes
     * @param denuncianteDomicilio
     * @param denunciadoTelefono
     * @param direccion
     * @param denunciadoCorreo
     * @param tipoDocumento
     * @param actos
     * @param codigoUsuario
     * @param tipozona
     * @param denuncianteCorreo
     * @param departamento
     * @param testigos
     * @param otraEntidadFecha
     * @param nombrezona
     * @return
     *     returns java.lang.String
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public String crearDenuncia(
        @WebParam(name = "codigoUsuario", partName = "codigoUsuario")
        String codigoUsuario,
        @WebParam(name = "numeroSolicitud", partName = "numeroSolicitud")
        String numeroSolicitud,
        @WebParam(name = "nombre", partName = "nombre")
        String nombre,
        @WebParam(name = "razonSocial", partName = "razonSocial")
        String razonSocial,
        @WebParam(name = "tipoDocumento", partName = "tipoDocumento")
        String tipoDocumento,
        @WebParam(name = "numeroDocumento", partName = "numeroDocumento")
        String numeroDocumento,
        @WebParam(name = "direccion", partName = "direccion")
        String direccion,
        @WebParam(name = "sdireccion", partName = "sdireccion")
        String sdireccion,
        @WebParam(name = "snumero", partName = "snumero")
        String snumero,
        @WebParam(name = "manzana", partName = "manzana")
        String manzana,
        @WebParam(name = "lote", partName = "lote")
        String lote,
        @WebParam(name = "piso", partName = "piso")
        String piso,
        @WebParam(name = "interior", partName = "interior")
        String interior,
        @WebParam(name = "departamento", partName = "departamento")
        String departamento,
        @WebParam(name = "provincia", partName = "provincia")
        String provincia,
        @WebParam(name = "distrito", partName = "distrito")
        String distrito,
        @WebParam(name = "tipozona", partName = "tipozona")
        String tipozona,
        @WebParam(name = "nombrezona", partName = "nombrezona")
        String nombrezona,
        @WebParam(name = "via", partName = "via")
        String via,
        @WebParam(name = "correo", partName = "correo")
        String correo,
        @WebParam(name = "telefono", partName = "telefono")
        String telefono,
        @WebParam(name = "descripcion", partName = "descripcion")
        String descripcion,
        @WebParam(name = "denuncianteNombre", partName = "denuncianteNombre")
        String denuncianteNombre,
        @WebParam(name = "denuncianteDomicilio", partName = "denuncianteDomicilio")
        String denuncianteDomicilio,
        @WebParam(name = "denuncianteTelefono", partName = "denuncianteTelefono")
        String denuncianteTelefono,
        @WebParam(name = "denuncianteCorreo", partName = "denuncianteCorreo")
        String denuncianteCorreo,
        @WebParam(name = "denunciadoNombre", partName = "denunciadoNombre")
        String denunciadoNombre,
        @WebParam(name = "denunciadoPuesto", partName = "denunciadoPuesto")
        String denunciadoPuesto,
        @WebParam(name = "denunciadoLTrabajo", partName = "denunciadoLTrabajo")
        String denunciadoLTrabajo,
        @WebParam(name = "denunciadoDomicilio", partName = "denunciadoDomicilio")
        String denunciadoDomicilio,
        @WebParam(name = "denunciadoCorreo", partName = "denunciadoCorreo")
        String denunciadoCorreo,
        @WebParam(name = "denunciadoTelefono", partName = "denunciadoTelefono")
        String denunciadoTelefono,
        @WebParam(name = "actos", partName = "actos")
        String actos,
        @WebParam(name = "quienes", partName = "quienes")
        String quienes,
        @WebParam(name = "circunstancias", partName = "circunstancias")
        String circunstancias,
        @WebParam(name = "pruebas", partName = "pruebas")
        String pruebas,
        @WebParam(name = "testigos", partName = "testigos")
        String testigos,
        @WebParam(name = "otraEntidadNombre", partName = "otraEntidadNombre")
        String otraEntidadNombre,
        @WebParam(name = "otraEntidadFecha", partName = "otraEntidadFecha")
        String otraEntidadFecha,
        @WebParam(name = "otraEntidadNoExpediente", partName = "otraEntidadNoExpediente")
        String otraEntidadNoExpediente,
        @WebParam(name = "remoteAddress", partName = "remoteAddress")
        String remoteAddress)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param dni
     * @return
     *     returns pe.gob.trabajo.service.wsstd.StringArray
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public StringArray obtenerPersona(
        @WebParam(name = "dni", partName = "dni")
        String dni)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param idUserDespacha
     * @param idAreaRemite
     * @param msgDestinatario
     * @return
     *     returns pe.gob.trabajo.service.wsstd.HojaDeEnvioWsDtoArray
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public HojaDeEnvioWsDtoArray crearMensajeria(
        @WebParam(name = "idAreaRemite", partName = "idAreaRemite")
        long idAreaRemite,
        @WebParam(name = "idUserDespacha", partName = "idUserDespacha")
        long idUserDespacha,
        @WebParam(name = "msgDestinatario", partName = "msgDestinatario")
        MsgDestinatarioArray msgDestinatario)
        throws ErrorDeServicio
    ;

    /**
     * 
     * @param numeroHE
     * @param anio
     * @return
     *     returns pe.gob.trabajo.service.wsstd.HojaDeEnvioWsDto
     * @throws ErrorDeServicio
     */
    @WebMethod
    @WebResult(name = "URL", partName = "URL")
    public HojaDeEnvioWsDto consultarHojaEnvio(
        @WebParam(name = "numeroHE", partName = "numeroHE")
        String numeroHE,
        @WebParam(name = "anio", partName = "anio")
        int anio)
        throws ErrorDeServicio
    ;

}
